package handler

import (
	"fmt"
	"net/http"

	"matchmaker/internal/model"
)

type ApiError = model.ApiError

func WriteApiError(w http.ResponseWriter, err ApiError) {
	w.WriteHeader(err.HTTPStatus)
	fmt.Fprintf(w, "%d: %v", err.HTTPStatus, err)
}

var NotFound = http.HandlerFunc(func(w http.ResponseWriter, _ *http.Request) {
	WriteApiError(w, ApiError{HTTPStatus: http.StatusNotFound})
})

var MethodNotAllowed = http.HandlerFunc(func(w http.ResponseWriter, _ *http.Request) {
	WriteApiError(w, ApiError{HTTPStatus: http.StatusMethodNotAllowed})
})

var Ok = http.HandlerFunc(func(w http.ResponseWriter, _ *http.Request) {
	WriteApiError(w, ApiError{HTTPStatus: http.StatusOK})
})
